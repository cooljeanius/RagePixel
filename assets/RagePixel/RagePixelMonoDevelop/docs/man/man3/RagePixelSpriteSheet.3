.TH "RagePixelSpriteSheet" 3 "Tue May 8 2012" "RagePixel" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RagePixelSpriteSheet \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRagePixelRow\fP \fBAddRow\fP (int key, int pixelSizeX, int pixelSizeY)"
.br
.ti -1c
.RI "\fBRagePixelRow\fP \fBAddRow\fP (int key, int index, int pixelSizeX, int pixelSizeY)"
.br
.ti -1c
.RI "void \fBMoveRow\fP (int fromIndex, int toIndex)"
.br
.ti -1c
.RI "\fBRagePixelRow\fP \fBGetRow\fP (int key)"
.br
.ti -1c
.RI "\fBRagePixelRow\fP \fBGetRowByName\fP (string name)"
.br
.ti -1c
.RI "int \fBGetKey\fP (int index)"
.br
.ti -1c
.RI "int \fBGetIndex\fP (int key)"
.br
.ti -1c
.RI "int \fBGetIndexByName\fP (string name)"
.br
.ti -1c
.RI "void \fBRemoveRowByKey\fP (int key)"
.br
.ti -1c
.RI "void \fBRemoveRowByName\fP (string name)"
.br
.ti -1c
.RI "void \fBRemoveRowByIndex\fP (int index)"
.br
.ti -1c
.RI "int \fBGetTotalCellCount\fP ()"
.br
.ti -1c
.RI "void \fBsaveUndo\fP (Color32[] buffer, \fBRagePixelCell\fP cell)"
.br
.ti -1c
.RI "void \fBsaveUndo\fP (\fBRagePixelCell\fP cell)"
.br
.ti -1c
.RI "void \fBDoUndo\fP (\fBRagePixelCell\fP cell)"
.br
.ti -1c
.RI "Color \fBreplaceColor\fP (Color32[] before, Color oldColor, Color newColor)"
.br
.ti -1c
.RI "Color \fBreplaceColor\fP (Color32[] before, Color oldColor, Color newColor, \fBRagePixelRow\fP targetRow)"
.br
.ti -1c
.RI "Color[] \fBgetPreviewImage\fP (int rowIndex, int cellIndex, int width, int height, bool selected, Color selectedBorder)"
.br
.ti -1c
.RI "Color[] \fBgetImage\fP (int rowIndex, int cellIndex)"
.br
.ti -1c
.RI "Color[] \fBgetImage\fP (int rowIndex, int cellIndex, int left, int top, int width, int height)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "Material \fBatlas\fP"
.br
.ti -1c
.RI "int \fBthumbnailSize\fP = 40"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBRagePixelRow\fP[] \fBrows\fP\fC [get, set]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 5 of file RagePixelSpriteSheet\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for RagePixel from the source code\&.
